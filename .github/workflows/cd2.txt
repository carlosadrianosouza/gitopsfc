####Este aqui é a primeira parte do curso, realizando apenas build da imagem |
##Criando e configurando o repositorio

name: CDGitops

on: 
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código da aplicação
        uses: actions/checkout@v3

      - name: Login no ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Build e push Docker
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/minha-app:${{ github.sha }} .
          docker push ${{ env.ECR_REGISTRY }}/minha-app:${{ github.sha }}

      - name: Instalar kubectl e kustomize
        run: |
          curl -LO "https://github.com/kubernetes-sigs/kustomize/releases/latest/download/kustomize_linux_amd64.tar.gz"
          tar -xzf kustomize_linux_amd64.tar.gz
          sudo mv kustomize /usr/local/bin/
          kubectl version --client
          kustomize version

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Clonar repositório de manifests
        run: |
          git clone https://github.com/meu-org/k8s-manifests.git

      - name: Atualizar imagem com kustomize
        run: |
          cd gitopsfc-manifests/apps/gitopsfc/prd
          kustomize edit set image minha-app=${{ env.ECR_REGISTRY }}/minha-app:${{ github.sha }}

      - name: Aplicar manifests no cluster
        run: |
          kubectl apply -k gitopsfc-manifests/apps/gitopsfc/overlays/prd
